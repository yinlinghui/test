@charset "UTF-8";
/* 暂时停用
// Dropdowns
*/
/* 暂时停用
// Pagination
// Pager
// Jumbotron
// Form states and alerts
// Cards
// Tooltips
// Popovers
// Labels
*/
/* 暂时停用
// Code
*/
.iconfont {
  display: inline-block;
  font-family: "iconfont" !important;
  font-style: normal;
  line-height: 1;
  text-rendering: auto;
  -webkit-font-smoothing: antialiased;
  -webkit-text-stroke-width: 0.2px;
  -moz-osx-font-smoothing: grayscale;
}

.icon-jiantou:before {
  content: "\e65e";
}

.icon-fanhui:before {
  content: "\e60f";
}

.icon-gou:before {
  content: "\e611";
}

.icon-loading:before {
  content: "\e61c";
}

.icon-gengduo:before {
  content: "\e60e";
}

.icon-size {
  font-size: .38rem;
}

.index-bg {
  background-color: #ffffff;
  min-height: 100vh;
}

.index-menu {
  padding: 1.27rem .8rem;
}

.index-menu img {
  width: 1.17rem;
  margin-bottom: .2rem;
}

.title {
  padding: .48rem .36rem;
}

.sub-title {
  font-family: "PingFangSC-Medium", "微软雅黑", Arial, Helvetica, sans-serif;
}

.h {
  font-family: "PingFangSC-Medium", "微软雅黑", Arial, Helvetica, sans-serif;
}

.orangeColor {
  color: #FF8C21;
}

.redColor {
  color: #E32B47;
}

.accept-info {
  color: #BCBBC0;
}

.accept-info i.icon-gou {
  color: #D0D0D0;
  font-size: .38rem;
}

.accept-info a {
  color: #3484F5;
}

.accept-info.active i.icon-gou {
  color: #FF8C21;
}

.btn-info {
  text-align: center;
  margin: 1rem 0;
}

.btn-info img {
  width: 6rem;
}

.img-info {
  width: 1.33rem;
}

.address {
  padding: .6rem .2rem .4rem .2rem;
  line-height: 1.8;
  margin-bottom: 0;
}

.line-40 {
  line-height: .4rem;
}

.upload-box .upload-box-x {
  height: 1px;
  width: auto;
  background-image: -webkit-linear-gradient(left, #999999 0%, #999999 50%, transparent 50%);
  background-image: linear-gradient(to right, #999999 0%, #999999 50%, transparent 50%);
  background-size: .32rem 1px;
  background-repeat: repeat;
}

.upload-box .upload-box-y {
  height: auto;
  width: 1px;
  background-image: -webkit-linear-gradient(top, #999999 0%, #999999 50%, transparent 50%);
  background-image: linear-gradient(to bottom, #999999 0%, #999999 50%, transparent 50%);
  background-size: 1px .32rem;
  background-repeat: repeat;
}

.upload-box .upload-info {
  -webkit-box-flex: 1;
      -ms-flex: 1;
          flex: 1;
}

.upload-box .bg-white {
  padding-top: 0 !important;
  padding-bottom: 0 !important;
  position: relative;
}

.upload-box img.icon-upload {
  width: 1.06rem;
}

.upload-box .btn-upload {
  width: 100%;
  position: absolute;
  top: 1rem;
}

.claims-list .sub-title {
  border-left: solid 0.06rem #FF8C21;
  padding-left: .16rem;
}

.btn-submit {
  position: relative;
  background-image: -webkit-linear-gradient(300deg, #FFC045 0%, #FF8C21 100%);
  background-image: linear-gradient(150deg, #FFC045 0%, #FF8C21 100%);
  box-shadow: 0 0.06rem 0.17rem 0 rgba(255, 140, 33, 0.6);
  border-radius: 1rem;
  color: #ffffff;
  font-size: .32rem;
  font-family: "PingFangSC-Medium", "微软雅黑", Arial, Helvetica, sans-serif;
  width: 100%;
  border-width: 0 !important;
  line-height: .4rem;
}

.btn-submit:hover {
  background-image: -webkit-linear-gradient(300deg, #FFC045 0%, #FF8C21 100%);
  background-image: linear-gradient(150deg, #FFC045 0%, #FF8C21 100%);
  color: #ffffff;
}

.btn-submit:focus {
  background-image: -webkit-linear-gradient(300deg, #FFC045 0%, #FF8C21 100%);
  background-image: linear-gradient(150deg, #FFC045 0%, #FF8C21 100%);
  color: #ffffff;
}

.btn-submit .icon-loading {
  display: none;
  font-size: .48rem;
  position: absolute;
  left: 1.7rem;
  top: .14rem;
  -webkit-animation: loading 1s infinite linear;
          animation: loading 1s infinite linear;
}

.isPaper i.icon-gou {
  color: #D0D0D0;
}

.isPaper.active i.icon-gou {
  color: #FF8C21;
}

/*# sourceMappingURL=data:application/json;base64, */
